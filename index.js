// Generated by CoffeeScript 1.7.1
var compile, compileAll, falafel, isMagicIdentifier, isMagicMember, isMagicProperty;

falafel = require('falafel');

compile = require('./compile');

compileAll = function(source) {
  return falafel(source, function(node) {
    if (node.type === 'Literal') {
      return node.update(compile(node.source()));
    }
  });
};

isMagicProperty = function(node, magicWord) {
  return node.type === 'Property' && node.key.name === magicWord;
};

isMagicMember = function(node, magicWord) {
  return node.type === 'AssignmentExpression' && node.left.type === 'MemberExpression' && node.left.property.name === magicWord;
};

isMagicIdentifier = function(node, magicWord) {
  return node.type === 'AssignmentExpression' && node.left.type === 'Identifier' && node.left.name === magicWord;
};

module.exports = function(src, magicWord) {
  if (magicWord == null) {
    magicWord = 'pistachio';
  }
  return falafel(src, function(node) {
    if (isMagicProperty(node, magicWord) || isMagicMember(node, magicWord) || isMagicIdentifier(node, magicWord)) {
      return node.update(compileAll(node.source()));
    }
  });
};
